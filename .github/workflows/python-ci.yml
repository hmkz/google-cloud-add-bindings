name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # 毎週日曜日に実行

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-
          
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH=$HOME/.cargo/bin:$PATH
        
    - name: Install dependencies
      run: |
        export PATH=$HOME/.cargo/bin:$PATH
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Lint with ruff
      run: |
        source .venv/bin/activate
        ruff check .
        
    - name: Sort imports with isort
      run: |
        source .venv/bin/activate
        isort --check .
        
    - name: Type check with mypy
      run: |
        source .venv/bin/activate
        mypy google_cloud_add_bindings

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-security-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-security-
          
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH=$HOME/.cargo/bin:$PATH
        
    - name: Install dependencies
      run: |
        export PATH=$HOME/.cargo/bin:$PATH
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        uv pip install safety
        
    - name: Security scan with bandit
      run: |
        source .venv/bin/activate
        bandit -r google_cloud_add_bindings
        
    - name: Check for vulnerable dependencies
      run: |
        source .venv/bin/activate
        safety check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-py${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-py${{ matrix.python-version }}-
        
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH=$HOME/.cargo/bin:$PATH
        
    - name: Install dependencies
      run: |
        export PATH=$HOME/.cargo/bin:$PATH
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        python -m pytest --cov=google_cloud_add_bindings --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-build-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-build-
          
    - name: Install uv and build dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH=$HOME/.cargo/bin:$PATH
        uv venv
        source .venv/bin/activate
        uv pip install build
        
    - name: Build package
      run: |
        source .venv/bin/activate
        python -m build
        
    - name: Store built package
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/ 