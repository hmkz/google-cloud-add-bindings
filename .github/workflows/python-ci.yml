name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      run: |
        curl -fsSL https://astral.sh/uv/install.sh | bash
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Lint with black & isort
      run: |
        source .venv/bin/activate
        black --check .
        isort --check .
        
    - name: Type check with mypy
      run: |
        source .venv/bin/activate
        mypy .
        
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        python -m pytest -v
        
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install uv
      run: |
        curl -fsSL https://astral.sh/uv/install.sh | bash
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Install build dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install build twine
        
    - name: Build package
      run: |
        source .venv/bin/activate
        python -m build
        
    - name: Check package
      run: |
        source .venv/bin/activate
        twine check dist/* 